<h2>Gosu for C++</h2>
<p>
  Gosu is written in C++ 2003 with minimal dependencies (no boost), and will slowly be updated to C++ 2011/2014.
  <br>
  You can check out <a href="https://github.com/gosu/gosu/blob/master/.travis.yml">the Travis CI configuration</a> to see which compilers and OS versions still work.
</p>
<p>
  The Windows version of Gosu is <a href="https://github.com/gosu/gosu/releases">available on GitHub</a> and compatible with the latest version of Visual C++.
  On other platforms, you can use either CMake or plain pkg-config.
</p>
<p>
  Installation is especially easy on macOS with <a href="http://brew.sh">Homebrew</a>: <tt>brew install libgosu</tt>
</p>
<p>
  On iOS and macOS, Gosu is available as a <a href="https://cocoapods.org">CocoaPod</a>.
</p>
<h3>C++ Project Structure</h3>
<p>
  <a href="https://github.com/gosu/gosu/wiki">The wiki</a> has platform-specific guides for setting up C++ projects.
</p>
<p>
  Alternatively, you can take a look at the <a href="https://github.com/jlnr/freegemas">Gosu port of TheOm3ga’s FreeGemas</a>.<br>
  The port is unfinished and rough, but the project can be built with CMake for Linux and macOS, and with Xcode for macOS and iOS.
</p>

<h2>Gosu for RubyMotion: motion-gosu</h2>
<p>
  The RubyMotion version of Gosu is a very early and rough port and does <strong>not</strong> support Android.
</p>
<p>
  The documentation is right on the <a href="https://github.com/gosu/motion-gosu">motion-gosu GitHub page</a>, but you can also look at another example project:
  <a href="https://github.com/jlnr/Trikus">Trikus</a>.<br>
  Its repository is structured in a way that makes it easy to run the same code with ‘normal’ Ruby, RubyMotion for macOS and RubyMotion for iOS.
  (Please don’t let the unfinished gameplay and missing artwork distract you.)
</p>

<h2>A Word of Warning…</h2>
<p>
  The C++ and RubyMotion versions of Gosu are not for the faint of heart.
  They are nowhere near as polished as <a href="ruby.html">Ruby/Gosu</a>.
</p>
<p>
  You’ll see terrible error messages, and you’ll need to know your tools well enough to fix them. <a href="https://github.com/gosu/gosu">Poking around the source code often helps, too.</a>
</p>
<p>
  Nevertheless, if you have written a great Ruby/Gosu game, porting it to RubyMotion or C++ might be the best way to share it with the world through Apple’s App Store for iOS and macOS. <a href="https://github.com/gosu/gosu/issues">Please file an issue</a> if you run into unexpected limitations.
</p>